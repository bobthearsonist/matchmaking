@model PlayerMatcher.User

@{
    ViewBag.Title = "Create";
}

<h3>Create User</h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Username</label>
            @*@Html.LabelFor(model => model.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Password</label>

            @*@Html.LabelFor(model => model.User_Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User_Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Online</label>
            @*@Html.LabelFor(model => model.Is_Online, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="dropdown dropdown-toggle">
                    @Html.EditorFor(model => model.Is_Online)
                    @Html.ValidationMessageFor(model => model.Is_Online, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-xs" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
